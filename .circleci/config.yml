# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-linux:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/rust:1.65.0
    resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
              sudo apt update
              sudo apt install libdbus-1-dev libncursesw5-dev libpulse-dev libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev pkg-config -y
      - run: 
          name: Build ncspot
          command: cargo build --release --target x86_64-unknown-linux-gnu
      - run:
          name: Package ncspot
          command: tar -czvf target/x86_64-unknown-linux-gnu/release/ncspot.tar.gz target/x86_64-unknown-linux-gnu/release/ncspot
      - store_artifacts:
          path: target/x86_64-unknown-linux-gnu/release/ncspot.tar.gz
          destination: ncspot.tar.gz
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-gnu/release
          paths:
            - ncspot.tar.gz

  build-debian:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/rust:1.65.0
    resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
              sudo apt update
              sudo apt install libdbus-1-dev libncursesw5-dev libpulse-dev libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev pkg-config -y
              cargo install cargo-deb
      - run: 
          name: Build ncspot
          command: cargo deb -o target/debian/ncspot.deb
      - store_artifacts:
          path: target/debian/ncspot.deb
          destination: ncspot.deb
      - persist_to_workspace:
          root: target/debian
          paths:
            - ncspot.deb
          
  build-windows:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/rust:1.65.0
    resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
              sudo apt update
              sudo apt install libdbus-1-dev libncursesw5-dev libpulse-dev libssl-dev libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev pkg-config musl-tools mingw-w64 -y
      - run:
          name: Add Windows target
          command: rustup target add x86_64-pc-windows-gnu
      - run: 
          name: Build ncspot
          command: cargo build --release --target x86_64-pc-windows-gnu --no-default-features --features rodio_backend,pancurses_backend
      - store_artifacts:
          path: target/x86_64-pc-windows-gnu/release/ncspot.exe
          destination: ncspot.exe
      - persist_to_workspace:
          root: target/x86_64-pc-windows-gnu/release
          paths:
            - ncspot.exe

  publish-release:
    docker:
      - image: cibuilds/github:0.10
    resource_class: small
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Rename artifact files"
          command: |
            mv ./artifacts/ncspot.tar.gz ./artifacts/ncspot-${CIRCLE_TAG}-linux-x86_64.tar.gz
            mv ./artifacts/ncspot.deb ./artifacts/ncspot-${CIRCLE_TAG}-debian.deb
            mv ./artifacts/ncspot.exe ./artifacts/ncspot-${CIRCLE_TAG}-windows-x86_64.exe
      - run:
          name: "Publish Release on GitHub"
          command: |
            ls -hl ./artifacts
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build-linux:
          filters:
                tags:
                  only: /.*/
      - build-debian:
          filters:
                tags:
                  only: /.*/
      - build-windows:
          filters:
                tags:
                  only: /.*/
      - publish-release:
          requires:
            - build-linux
            - build-debian
            - build-windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
